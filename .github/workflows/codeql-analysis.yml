# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches:
      #      - master
      #      - dev_*
      - githubWorkflowTests
  pull_request:
#    branches:
#      - master
#      - dev_*
#  schedule:
#    - cron: '21 4 * * 2'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      #    - name: Autobuild
      #      uses: github/codeql-action/autobuild@v1

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 https://git.io/JvXDl

      # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Install dependencies (ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake zip
          ninja --version
          cmake --version
          gcc --version

      - name: Cache Boost Codeql (ubuntu)
        id: cache-boost-codeql-ubuntu
        uses: actions/cache@v2.1.6
        with:
          path: boost_1_76_0
          key: ${{ runner.os }}-boost-codeql

      - name: Download and build BOOST (ubuntu)
        if: steps.cache-boost-codeql-ubuntu.outputs.cache-hit != 'true'
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz >> /dev/null 2>&1
          tar xfz boost_1_76_0.tar.gz
          cd boost_1_76_0/
          ./bootstrap.sh --with-libraries=serialization,program_options
          ./b2
          cd ..

      - name: Install BOOST (ubuntu)
        run: |
          cd boost_1_76_0/
          sudo ./b2 install >> /dev/null 2>&1
          cd ..

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Release --parallel

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
