name: CMake

on:
  push:
    branches:
#    - master
#    - dev_v0.4
    - githubWorkflowTests

  pull_request:
#    branches:
#    - master

jobs:
  build:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
          name: "Ubuntu_Latest",
          os: ubuntu-latest,
          artifact: "FrankyCPP_v0.4.zip",
          build_type: "Release",
          cc: "gcc",
          cxx: "g++",
          archiver: "zip",
          generators: "Ninja"
        }

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Print env
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}

# ##############################################################################
# UBUNTU
# ##############################################################################

    - name: Cache Boost Build (ubuntu)
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      uses: actions/cache@v2
      env:
        cache-name: cache-boost-build
      with:
        path: boost_1_76_0
        key: ${{ runner.os }}-boost-build

    - name: Install dependencies (ubuntu)
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build cmake
        ninja --version
        cmake --version
        gcc --version

    - name: Download and build BOOST
      if: startsWith(matrix.config.name, 'Ubuntu_Latest') && steps.cache-boost-build.outputs.cache-hit != 'true'
      run: |
        wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz >> /dev/null 2>&1
        tar xfz boost_1_76_0.tar.gz
        cd boost_1_76_0/
        ./bootstrap.sh --with-libraries=serialization,program_options
        ./b2
        cd ..

    - name: Install BOOST
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      run: |
        cd boost_1_76_0/
        sudo ./b2 install >> /dev/null 2>&1
        cd ..

    - name: Configure CMake
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -G "${{ matrix.config.generators }}"

    - name: Build
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.config.build_type }}

    - name: Test
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{ matrix.config.build_type }}

    - name: Run benchmark test
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      working-directory: ${{github.workspace}}/build
      run: ./testbench/FrankyCPP_v0.4_Bench

    - name: Run PERFT test
      if: startsWith(matrix.config.name, 'Ubuntu_Latest')
      working-directory: ${{github.workspace}}/build
      run: ./src/FrankyCPP_v0.4 --perft --endDepth=5
